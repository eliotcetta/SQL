#This analysis of twenty randomly generated Hollywood stars utilized the following data set I compiled.

CREATE TABLE hollywood_stars (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    fullname TEXT,
    birth_year INTEGER,
    credits INTEGER,
    wins INTEGER,
    nominations INTEGER);
    
INSERT INTO hollywood_stars (fullname, birth_year, credits, wins, nominations) 
VALUES 
    ("Maggie Gyllenhaal", 1977, 55, 43, 94),
    ("Peter Sarsgaard", 1971, 76, 14, 38),
    ("Paul Thomas Anderson", 1970, 83, 95, 273),
    ("Maya Rudolph", 1972, 130, 23, 56),
    ("Harrison Ford", 1942, 91, 45, 47),
    ("Olivia Colman", 1974, 131, 99, 167),
    ("Daniel Kaluuya", 1989, 59, 47, 93),
    ("Jesse Plemons", 1988, 67, 5, 41),
    ("Keke Palmer", 1993, 123, 17, 54),
    ("Pam Grier", 1949, 113, 8, 24),
    ("Robert De Niro", 1943, 175, 67, 138),
    ("Samuel L. Jackson", 1948, 221, 48, 95),
    ("Jordan Peele", 1979, 40, 107, 149),
    ("Barry Jenkins", 1979, 43, 103, 152),
    ("Don Cheadle", 1964, 125, 38, 118),
    ("Kirsten Dunst", 1982, 93, 51, 122),
    ("Joaquin Phoenix", 1974, 76, 70, 188),
    ("Reese Witherspoon", 1976, 112, 57, 123),
    ("Matt Damon", 1970, 133, 37, 154),
    ("Drew Barrymore", 1975, 115, 36, 63);

CREATE TABLE partners (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    person_id INTEGER,
    name TEXT,
    partner_id INTEGER);
    
INSERT INTO partners (person_id, name, partner_id) 
VALUES 
    (1, "Peter Sarsgaard", 2),
    (2, "Maggie Gyllenhaal", 1),
    (3, "Maya Rudolph", 4),
    (4, "Paul Thomas Anderson", 3),
    (5, "Calista Flockhart", NULL),
    (6, "Ed Sinclair", NULL),
    (7, "Amandla Chrichlow", NULL),
    (8, "Kirsten Dunst", 16),
    (9, NULL, NULL),
    (10, NULL, NULL),
    (11, "Tiffany Chen", NULL),
    (12, "LaTanya Richardson Jackson", NULL),
    (13, "Chelsea Peretti", NULL),
    (14, "Lulu Wang", NULL),
    (15, "Brigid Coulter", NULL),
    (16, "Jesse Plemons", 8),
    (17, "Rooney Mara", NULL),
    (18, NULL, NULL),
    (19, "Luciana Barroso", NULL),
    (20, NULL, NULL);

CREATE TABLE industry_role (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    person_id INTEGER,
    name TEXT);
    
INSERT INTO industry_role (person_id, name) 
VALUES 
    (1, "Actress"),
    (1, "Producer"),
    (1, "Director"),
    (2, "Actor"),
    (2, "Producer"),
    (3, "Director"),
    (3, "Writer"),
    (3, "Producer"),
    (4, "Actress"),
    (4, "Producer"),
    (4, "Writer"),
    (5, "Actor"),
    (5, "Writer"),
    (5, "Producer"),
    (6, "Actress"),
    (6, "Producer"),
    (6, "Writer"),
    (7, "Actor"),
    (7, "Producer"),
    (7, "Writer"),
    (8, "Actor"),
    (8, "Music"),
    (8, "Producer"),
    (9, "Actress"),
    (9, "Music"),
    (9, "Producer"),
    (10, "Actress"),
    (10, "Writer"),
    (10, "Music"),
    (11, "Actor"),
    (11, "Producer"),
    (11, "Director"),
    (12, "Actor"),
    (12, "Producer"),
    (12, "Crew"),
    (13, "Director"),
    (13, "Writer"),
    (13, "Producer"),
    (14, "Producer"),
    (14, "Director"),
    (14, "Writer"),
    (15, "Actor"),
    (15, "Producer"),
    (15, "Director"),
    (16, "Actress"),
    (16, "Producer"),
    (16, "Director"),
    (17, "Actor"),
    (17, "Producer"),
    (17, "Director"),
    (18, "Producer"),
    (18, "Actress"),
    (19, "Producer"),
    (19, "Actor"),
    (19, "Writer"),
    (20, "Producer"),
    (20, "Actress"),
    (20, "Director");


CREATE TABLE co_project (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT);
    
INSERT INTO co_project (name) 
VALUES 
    ("50 First Dates"),
    ("A Prairie Home Companion"),
    ("Anchorman 2: The Legend Continues"),
    ("Animal"),
    ("Avengers: Age of Ultron"),
    ("Avengers: Endgame"),
    ("Avengers: Infinity War"),
    ("Away We Go"),
    ("Big Mouth"),
    ("Black Mass"),
    ("Black Mirror"),
    ("Boogie Nights"),
    ("Captain Marvel"),
    ("Cleaner"),
    ("Confessions of a Dangerous Mind"),
    ("Donnie Darko"),
    ("Drunk History"),
    ("Duplex"),
    ("Everybody's Fine"),
    ("Fargo"),
    ("Father of the Bride Part 3 (ish)"),
    ("Get Out"),
    ("Goodfellas"),
    ("Grey's Anatomy"),
    ("Hard Eight"),
    ("Honk for Jesus. Save Your Soul."),
    ("Hotel Rwanda"),
    ("Human Resources"),
    ("Inherent Vice"),
    ("Iron Man 2"),
    ("Jackie Brown"),
    ("Joker"),
    ("Judas and the Black Messiah"),
    ("K-19: The Widowmaker"),
    ("Key and Peele"),
    ("Killers of the Flower Moon"),
    ("Licorice Pizza"),
    ("Little Fockers"),
    ("Mad TV"),
    ("Mona Lisa Smile"),
    ("No Sudden Move"),
    ("Nope"),
    ("Ocean's Eleven"),
    ("Ocean's Thirteen"),
    ("Ocean's Twelve"),
    ("Out of Sight"),
    ("Patriot Games"),
    ("Rendition"),
    ("Riding in Cars with Boys"),
    ("Secret Invasion"),
    ("Shrink"),
    ("Star Wars: Episode IX - The Rise of Skywalker"),
    ("The Good Shepherd"),
    ("The Irishman"),
    ("The Lost Daughter"),
    ("The Man Who Saved the World"),
    ("The Master"),
    ("The Mitchells vs the Machines"),
    ("The Power of the Dog"),
    ("They've Gotta Have Us"),
    ("Titan A.E."),
    ("Turbo"),
    ("Wag the Dog"),
    ("Walk the Line"),
    ("Watership Down");

CREATE TABLE project (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    person_id INTEGER,
    project TEXT,
    project_type TEXT,
    project_id INTEGER);
    
INSERT INTO project (person_id, project, project_type, project_id) 
VALUES 
    (1, "Donnie Darko", "Film", 16),
    (1, "Away We Go", "Film", 8),
    (1, "The Lost Daughter", "Film", 55),
    (1, "Mona Lisa Smile", "Film", 40),
    (1, "Confessions of a Dangerous Mind", "Film", 15),
    (1, "Riding in Cars with Boys", "Film", 49),
    (2, "The Lost Daughter", "Film", 55),
    (2, "K-19: The Widowmaker", "Film", 34),
    (2, "Rendition", "Film", 48),
    (2, "Black Mass", "Film", 10),
    (3, "Inherent Vice", "Film", 29),
    (3, "Licorice Pizza", "Film", 37),
    (3, "The Master", "Film", 57),
    (3, "Hard Eight", "Film", 25),
    (3, "Boogie Nights", "Film", 12),
    (3, "A Prairie Home Companion", "Film", 2),
    (4, "50 First Dates", "Film", 1),
    (4, "Away We Go", "Film", 8),
    (4, "Inherent Vice", "Film", 29),
    (4, "Licorice Pizza", "Film", 37),
    (4, "Drunk History", "Series", 17),
    (4, "Big Mouth", "Series", 9),
    (4, "A Prairie Home Companion", "Film", 2),
    (4, "The Mitchells vs the Machines", "Film", 58),
    (4, "Human Resources", "Series", 28),
    (4, "Turbo", "Film", 62),
    (4, "Duplex", "Film", 18),
    (5, "K-19: The Widowmaker", "Film", 34),
    (5, "Patriot Games", "Film", 47),
    (5, "Star Wars: Episode IX - The Rise of Skywalker", "Film", 52),
    (5, "Anchorman 2: The Legend Continues", "Film", 3),
    (6, "The Lost Daughter", "Film", 55),
    (6, "Watership Down", "Series", 65),
    (6, "The Mitchells vs the Machines", "Film", 58),
    (6, "Secret Invasion", "Series", 50),
    (7, "Get Out", "Film", 22),
    (7, "Nope", "Film", 42),
    (7, "Judas and the Black Messiah", "Film", 33),
    (7, "Black Mirror", "Series", 11),
    (7, "Watership Down", "Series", 65),
    (7, "Honk for Jesus. Save Your Soul.", "Film", 26),
    (8, "The Master", "Film", 57),
    (8, "Judas and the Black Messiah", "Film", 33),
    (8, "Black Mirror", "Series", 11),
    (8, "The Power of the Dog", "Film", 59),
    (8, "The Irishman", "Film", 54),
    (8, "Drunk History", "Series", 17),
    (8, "Fargo", "Series", 20),
    (8, "Black Mass", "Film", 10),
    (8, "Grey's Anatomy", "Series", 24),
    (8, "Shrink", "Film", 51),
    (8, "Killers of the Flower Moon", "Film", 36),
    (9, "Nope", "Film", 42),
    (9, "Grey's Anatomy", "Series", 24),
    (9, "Cleaner", "Film", 14),
    (9, "Key and Peele", "Series", 35),
    (9, "Big Mouth", "Series", 9),
    (9, "Human Resources", "Series", 28),
    (9, "Shrink", "Film", 51),
    (9, "Animal", "Film", 4),
    (10, "Jackie Brown", "Film", 31),
    (11, "The Irishman", "Film", 54),
    (11, "Jackie Brown", "Film", 31),
    (11, "Joker", "Film", 32),
    (11, "The Good Shepherd", "Film", 53),
    (11, "Goodfellas", "Film", 23),
    (11, "Wag the Dog", "Film", 63),
    (11, "Everybody's Fine", "Film", 19),
    (11, "Killers of the Flower Moon", "Film", 36),
    (11, "Little Fockers", "Film", 38),
    (11, "Father of the Bride Part 3 (ish)", "Film", 21),
    (11, "The Man Who Saved the World", "Film", 56),
    (12, "Patriot Games", "Film", 47),
    (12, "Star Wars: Episode IX - The Rise of Skywalker", "Film", 52),
    (12, "Jackie Brown", "Film", 31),
    (12, "Cleaner", "Film", 14),
    (12, "Goodfellas", "Film", 23),
    (12, "Hard Eight", "Film", 25),
    (12, "Turbo", "Film", 62),
    (12, "Secret Invasion", "Series", 50),
    (12, "Avengers: Endgame", "Film", 6),
    (12, "Captain Marvel", "Film", 13),
    (12, "Avengers: Age of Ultron", "Film", 5),
    (12, "Iron Man 2", "Film", 30),
    (12, "Out of Sight", "Film", 46),
    (13, "Get Out", "Film", 22),
    (13, "Nope", "Film", 42),
    (13, "Mad TV", "Series", 39),
    (13, "Drunk History", "Series", 17),
    (13, "Fargo", "Series", 20),
    (13, "Key and Peele", "Series", 35),
    (13, "Big Mouth", "Series", 9),
    (13, "Honk for Jesus. Save Your Soul.", "Film", 26),
    (13, "Little Fockers", "Film", 38),
    (14, "They've Gotta Have Us", "Film", 60),
    (15, "Boogie Nights", "Film", 12),
    (15, "Secret Invasion", "Series", 50),
    (15, "Avengers: Endgame", "Film", 6),
    (15, "Avengers: Infinity War", "Film", 7),
    (15, "Captain Marvel", "Film", 13),
    (15, "Avengers: Age of Ultron", "Film", 5),
    (15, "Iron Man 2", "Film", 30),
    (15, "Out of Sight", "Film", 46),
    (15, "Mad TV", "Series", 39),
    (15, "They've Gotta Have Us", "Film", 60),
    (15, "Hotel Rwanda", "Film", 27),
    (15, "No Sudden Move", "Film", 41),
    (15, "Ocean's Eleven", "Film", 43),
    (15, "Ocean's Twelve", "Film", 45),
    (15, "Ocean's Thirteen", "Film", 44),
    (16, "Black Mirror", "Series", 11),
    (16, "The Power of the Dog", "Film", 59),
    (16, "Drunk History", "Series", 17),
    (16, "Fargo", "Series", 20),
    (16, "Wag the Dog", "Film", 63),
    (16, "Mona Lisa Smile", "Film", 40),
    (16, "Anchorman 2: The Legend Continues", "Film", 3),
    (17, "Inherent Vice", "Film", 29),
    (17, "The Master", "Film", 57),
    (17, "Joker", "Film", 32),
    (17, "Hotel Rwanda", "Film", 27),
    (17, "Walk the Line", "Film", 64),
    (18, "Rendition", "Film", 48),
    (18, "Inherent Vice", "Film", 29),
    (18, "Father of the Bride Part 3 (ish)", "Film", 21),
    (18, "Walk the Line", "Film", 64),
    (19, "The Good Shepherd", "Film", 53),
    (19, "Confessions of a Dangerous Mind", "Film", 15),
    (19, "The Man Who Saved the World", "Film", 56),
    (19, "No Sudden Move", "Film", 41),
    (19, "Ocean's Eleven", "Film", 43),
    (19, "Ocean's Twelve", "Film", 45),
    (19, "Ocean's Thirteen", "Film", 44),
    (19, "Titan A.E.", "Film", 61),
    (20, "Donnie Darko", "Film", 16),
    (20, "50 First Dates", "Film", 1),
    (20, "Everybody's Fine", "Film", 19),
    (20, "Confessions of a Dangerous Mind", "Film", 15),
    (20, "Riding in Cars with Boys", "Film", 49),
    (20, "Duplex", "Film", 18),
    (20, "Animal", "Film", 4),
    (20, "Titan A.E.", "Film", 61);

SELECT h.fullname AS Star, 
h.birth_year AS "Birth Year", 
h.credits AS "IMDB Credits", 
h.wins AS Wins, 
h.nominations AS Nominations 
FROM hollywood_stars AS h 
ORDER BY h.fullname;

/* Are any of the listed Hollywood stars married? */

SELECT DISTINCT h.fullname AS "Spouse 1", 
p.name AS "Spouse 2"
    FROM hollywood_stars AS h
    LEFT OUTER JOIN partners AS p 
    ON h.id = p.person_id
    WHERE h.id < p.partner_id;
    
/* Have any of the listed Hollywood stars worked on the same project? */

SELECT cp.name AS "Common Project", 
GROUP_CONCAT(hs.fullname) AS Stars
    FROM co_project cp
    JOIN project p 
    ON cp.id = p.project_id
    JOIN hollywood_stars hs 
    ON p.person_id = hs.id
GROUP BY cp.name ORDER BY cp.name;

/* Which stars have worked on the most projects together? */

SELECT DISTINCT
    hs1.fullname AS "Star 1", 
    hs2.fullname AS "Star 2",
    COUNT(*) AS "Shared Projects"
FROM
    project AS p1
JOIN
    hollywood_stars AS hs1 ON p1.person_id = hs1.id
JOIN
    project AS p2 ON p1.project_id = p2.project_id
JOIN
    hollywood_stars AS hs2 ON p2.person_id = hs2.id
WHERE hs1.fullname < hs2.fullname
GROUP BY
    hs1.fullname, hs2.fullname
ORDER BY
    COUNT(*) DESC LIMIT 7;
    
/* What roles do these stars perform in the entertainment industry? */
    
SELECT h.fullname AS Star, 
GROUP_CONCAT(
    DISTINCT CASE 
        WHEN industry_role.name IN ('Actor', 'Actress') THEN 'Acting' 
        WHEN industry_role.name IN ('Producer') THEN 'Producing'
        WHEN industry_role.name IN ('Director') THEN 'Directing'
        WHEN industry_role.name IN ('Writer') THEN 'Writing'
        WHEN industry_role.name IN ('Music') THEN 'Music Dept'
        ELSE 'Misc Crew' 
    END) AS "Industry Roles Performed"
    FROM industry_role
    JOIN hollywood_stars AS h
    ON industry_role.person_id = h.id
    GROUP BY h.fullname;

/* Which decades were these stars born in? */

SELECT 
    CASE
        WHEN hollywood_stars.birth_year < 1960 THEN "1950's"
        WHEN hollywood_stars.birth_year < 1970 THEN "1960's"
        WHEN hollywood_stars.birth_year < 1980 THEN "1970's"
        WHEN hollywood_stars.birth_year < 1990 THEN "1980's"
        WHEN hollywood_stars.birth_year < 2000 THEN "1990's"
        WHEN hollywood_stars.birth_year < 2010 THEN "2000's"
        WHEN hollywood_stars.birth_year IS NULL THEN "N/A"
        ELSE "Error"
    END as "Birth Decade",
GROUP_CONCAT(DISTINCT hollywood_stars.fullname) AS Stars
    FROM hollywood_stars
    GROUP BY "Birth Decade";

/* Break down the average number of wins and nominations per star and per industry role for each decade of stars. */
    
 SELECT 
    CASE
        WHEN hollywood_stars.birth_year < 1960 THEN "1950's"
        WHEN hollywood_stars.birth_year < 1970 THEN "1960's"
        WHEN hollywood_stars.birth_year < 1980 THEN "1970's"
        WHEN hollywood_stars.birth_year < 1990 THEN "1980's"
        WHEN hollywood_stars.birth_year < 2000 THEN "1990's"
        WHEN hollywood_stars.birth_year < 2010 THEN "2000's"
        WHEN hollywood_stars.birth_year IS NULL THEN "N/A"
        ELSE "Error"
    END as "Birth Decade",
    CAST(SUM(hollywood_stars.wins) AS DECIMAL) / COUNT(DISTINCT hollywood_stars.fullname) AS "Avg Wins per Star",
    CAST(SUM(hollywood_stars.nominations) AS DECIMAL) / COUNT(DISTINCT hollywood_stars.fullname) AS "Avg Noms per Star",
    CAST(SUM(hollywood_stars.wins) AS DECIMAL) / COUNT (DISTINCT industry_role.name) AS "Avg Wins per Industry Role",
    CAST(SUM(hollywood_stars.nominations) AS DECIMAL) / COUNT (DISTINCT industry_role.name) AS "Avg Noms per Industry Role"
    FROM hollywood_stars
    JOIN industry_role
    ON hollywood_stars.id = industry_role.person_id
    GROUP BY "Birth Decade";
    
/* Break down the total number of wins and nominations for the male and female stars. */

SELECT 
    CASE
        WHEN industry_role.name = 'Actor' THEN 'Men'
        WHEN industry_role.name = 'Actress' THEN 'Women'
        ELSE NULL
    END as "Gender",
    SUM(hollywood_stars.wins) AS total_wins, 
    SUM(hollywood_stars.nominations) AS total_nominations
    FROM industry_role
    JOIN hollywood_stars
    ON hollywood_stars.id = industry_role.person_id
    GROUP BY "Gender"
    HAVING "Gender" IS NOT NULL;
    
